# HashCats Component Implementation Guide

## Core Components

### 1. Studio Layout
The main wrapper for all studio features.

```jsx
// src/components/studio/common/StudioLayout.jsx
import React from 'react';
import ToolSelector from './ToolSelector';

const StudioLayout = ({ children }) => {
  return (
    <div className="min-h-screen bg-gray-900">
      <ToolSelector />
      <main className="container mx-auto px-4 py-8">
        {children}
      </main>
    </div>
  );
};

export default StudioLayout;
```

### 2. Cat Creator Implementation
```jsx
// src/components/studio/creative/CatCreator.jsx
import React, { useState } from 'react';

const CatCreator = () => {
  const [prompt, setPrompt] = useState('');
  
  return (
    <div className="bg-gray-800 rounded-lg p-6">
      <h2 className="text-2xl text-white mb-4">Create Your HashCat</h2>
      {/* Implementation details */}
    </div>
  );
};

export default CatCreator;
```

## Implementation Order

### Phase 1: Core Structure
1. StudioLayout
2. ToolSelector
3. Basic routing

### Phase 2: Creative Tools
1. CatCreator
2. CatPersonality
3. StyleTransfer

### Phase 3: Utility Tools
1. ImageEnhancer
2. BackgroundRemover
3. FaceSwapper

## Integration Points

### WordPress REST API
```javascript
// src/services/wpService.js
export const saveCreation = async (artworkData) => {
  const response = await fetch('/wp-json/hashcats/v1/artwork', {
    method: 'POST',
    body: JSON.stringify(artworkData)
  });
  return response.json();
};
```

### AI Tool Integration
```javascript
// src/services/aiService.js
export const generateArt = async (prompt) => {
  // AI integration implementation
};
```